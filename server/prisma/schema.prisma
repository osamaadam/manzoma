// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator typegraphql {
  provider = "typegraphql-prisma"
  // emitOnly = "models,inputs"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  username String @unique
  /// @TypeGraphQL.omit(output: true)
  password String
}

model Tagneed {
  id   Int    @id @default(autoincrement())
  name String @unique
  gov  Gov[]
}

model Gov {
  id        Int      @id
  name      String
  tagneedId Int
  tagneed   Tagneed  @relation(fields: [tagneedId], references: [id])
  center    Center[]
}

model Qualification {
  id      Int       @id
  name    String
  soldier Soldier[]
}

model Religion {
  id      Int       @id
  name    String
  soldier Soldier[]
}

model Center {
  id             Int              @id
  name           String
  govId          Int
  gov            Gov              @relation(fields: [govId], references: [id])
  soldier        Soldier[]
  militaryEntity MilitaryEntity[]
}

model TagneedFactor {
  id      Int       @id
  name    String
  soldier Soldier[]
}

model Sarya {
  id     Int      @id @default(autoincrement())
  name   String   @unique
  fasela Fasela[]
}

model Fasela {
  id      Int       @id @default(autoincrement())
  name    String
  saryaId Int
  sarya   Sarya     @relation(fields: [saryaId], references: [id])
  soldier Soldier[]
}

model Soldier {
  name              String
  militaryNo        String        @id @unique
  nationalNo        String        @unique
  seglNo            Int
  marhla            Int
  registerationDate DateTime      @default(now())
  qualificationId   Int
  qualification     Qualification @relation(fields: [qualificationId], references: [id])
  religionId        Int
  religion          Religion      @relation(fields: [religionId], references: [id])
  centerId          Int
  center            Center        @relation(fields: [centerId], references: [id])
  tagneedFactorId   Int
  tagneedFactor     TagneedFactor @relation(fields: [tagneedFactorId], references: [id])
  faselaId          Int?
  fasela            Fasela?       @relation(fields: [faselaId], references: [id])
  statusId          Int?
  status            Status?       @relation(fields: [statusId], references: [id])
  rankId            Int?
  rank              Rank?         @relation(fields: [rankId], references: [id])
  address           String?
  tawzea            Tawzea?
  tarheal           Tarheal?
  predefinedEtgahId Int
  predefinedEtgah   Etgah         @relation(fields: [predefinedEtgahId], references: [id])

  @@unique([seglNo, marhla])
}

model Rank {
  id      Int       @id
  name    String    @unique
  soldier Soldier[]
}

model Status {
  id      Int       @id @default(autoincrement())
  name    String    @unique
  soldier Soldier[]
}

model MilitaryEntity {
  id       Int     @id
  name     String
  centerId Int?
  center   Center? @relation(fields: [centerId], references: [id])
  unit     Unit[]
}

model Weapon {
  id             Int              @id
  name           String
  unit           Unit[]
  specialization Specialization[]
}

model Etgah {
  id      Int       @id
  name    String    @unique
  unit    Unit[]
  soldier Soldier[]
}

model Unit {
  id               Int             @id
  name             String
  parentId         Int?
  parent           Unit?           @relation("UnitToUnit", fields: [parentId], references: [id])
  militaryEntityId Int?
  militaryEntity   MilitaryEntity? @relation(fields: [militaryEntityId], references: [id])
  weaponId         Int?
  weapon           Weapon?         @relation(fields: [weaponId], references: [id])
  etgahId          Int
  etgah            Etgah           @relation(fields: [etgahId], references: [id])
  unit             Unit[]          @relation("UnitToUnit")
  tarheal          Tarheal[]
  tawzea           Tawzea[]
}

model Tawzea {
  id               Int             @id @default(autoincrement())
  militaryNo       String          @unique
  soldier          Soldier         @relation(fields: [militaryNo], references: [militaryNo])
  unitId           Int
  unit             Unit            @relation(fields: [unitId], references: [id])
  pageNo           Int
  receivedTawzeaId Int
  receivedTawzea   ReceivedTawzea  @relation(fields: [receivedTawzeaId], references: [id])
  specializationId Int?
  specialization   Specialization? @relation(fields: [specializationId], references: [id])
}

model Specialization {
  id       Int      @id @default(autoincrement())
  name     String
  weaponId Int?
  weapon   Weapon?  @relation(fields: [weaponId], references: [id])
  tawzea   Tawzea[]
}

model ReceivedTawzea {
  id            Int      @id @default(autoincrement())
  marhla        Int
  displayName   String
  numOfPages    Int
  dateReceived  DateTime @default(now())
  tawzeaHistory Tawzea[]
}

model Tarheal {
  id         Int      @id @default(autoincrement())
  militaryNo String   @unique
  soldier    Soldier  @relation(fields: [militaryNo], references: [militaryNo])
  unitId     Int
  unit       Unit     @relation(fields: [unitId], references: [id])
  createdAt  DateTime @default(now())
}
